###########
# BUILDER #
###########

# Pull official base image.
FROM balenalib/rpi-debian-python:3.7.4-buster-build AS builder

# Set work directory.
WORKDIR /usr/src/app

# Set environment variables.
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Lint.
RUN pip install --upgrade pip
RUN pip install flake8
COPY . /usr/src/app/
RUN flake8 --ignore=E501,F401 .

# Install dependencies.
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# Pull official base image.
FROM balenalib/rpi-debian-python:3.7.4-buster-run

# create directory for the app user
RUN mkdir -p /home/app

# Create the app user.
RUN addgroup -S app && adduser -S app -G app

# Create the appropriate directories.
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# Install dependencies.
RUN apk update && apk add libpq
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# Copy entrypoint-prod.sh.
COPY ./entrypoint.prod.sh $APP_HOME

# Copy project.
COPY . $APP_HOME

# Chown all the files to the app user.
RUN chown -R app:app $APP_HOME

# Change to the app user.
USER app

# Run entrypoint.prod.sh.
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
