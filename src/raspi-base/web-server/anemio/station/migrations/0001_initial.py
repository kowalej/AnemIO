# Generated by Django 3.0.3 on 2020-03-20 03:26

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccelerometerXyz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('z', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'accelerometer_xyz',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AmbientLightState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ambient_light_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AmbientLightValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ambient_light_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompassHeading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('heading', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'compass_heading',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompassXyz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('z', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'compass_xyz',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('online_devices', models.TextField(blank=True, null=True)),
                ('offline_devices', models.TextField(blank=True, null=True)),
                ('is_setup', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'device_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Humidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'humidity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PressureAltitude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pressure_altitude',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PressurePressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pressure_pressure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PressureTemperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pressure_temperature',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PressureValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pressure_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RainState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rain_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RainValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rain_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StationLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('is_actual', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'station_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StationState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'station_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'temperature',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WaterTemperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'water_temperature',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WindDirection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wind_direction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WindSpeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wind_speed',
                'managed': False,
            },
        ),
    ]
